{"/home/travis/build/npmtest/node-npmtest-karma-webpack/test.js":"/* istanbul instrument in package npmtest_karma_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-karma-webpack/lib.npmtest_karma_webpack.js":"/* istanbul instrument in package npmtest_karma_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_karma_webpack = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_karma_webpack = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-karma-webpack/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-karma-webpack && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_karma_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_karma_webpack\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_karma_webpack.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_karma_webpack.rollup.js'] =\n            local.assetsDict['/assets.npmtest_karma_webpack.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_karma_webpack.__dirname + '/lib.npmtest_karma_webpack.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-karma-webpack/node_modules/karma-webpack/index.js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = require('./lib/karma-webpack')\n","/home/travis/build/npmtest/node-npmtest-karma-webpack/node_modules/karma-webpack/lib/karma-webpack.js":"'use strict';\n\nvar _ = require('lodash');\nvar path = require('path');\nvar async = require('async');\nvar webpackDevMiddleware = require('webpack-dev-middleware');\nvar webpack = require('webpack');\nvar SingleEntryDependency = require('webpack/lib/dependencies/SingleEntryDependency');\n\nvar blocked = [];\nvar isBlocked = false;\n\nfunction Plugin(\n/* config.webpack */webpackOptions,\n/* config.webpackServer */webpackServerOptions,\n/* config.webpackMiddleware */webpackMiddlewareOptions,\n/* config.basePath */basePath,\n/* config.files */files,\n/* config.frameworks */frameworks, customFileHandlers, emitter) {\n  webpackOptions = _.clone(webpackOptions) || {};\n  webpackMiddlewareOptions = _.clone(webpackMiddlewareOptions || webpackServerOptions) || {};\n\n  var applyOptions = Array.isArray(webpackOptions) ? webpackOptions : [webpackOptions];\n  var includeIndex = applyOptions.length > 1;\n\n  applyOptions.forEach(function (webpackOptions, index) {\n    // The webpack tier owns the watch behavior so we want to force it in the config\n    webpackOptions.watch = true;\n\n    // Webpack 2.1.0-beta.7+ will throw in error if both entry and plugins are not specified in options\n    // https://github.com/webpack/webpack/commit/b3bc5427969e15fd3663d9a1c57dbd1eb2c94805\n    if (!webpackOptions.entry) {\n      webpackOptions.entry = function () {\n        return {};\n      };\n    };\n\n    if (!webpackOptions.output) {\n      webpackOptions.output = {};\n    };\n\n    // When using an array, even of length 1, we want to include the index value for the build.\n    // This is due to the way that the dev server exposes commonPath for build output.\n    var indexPath = includeIndex ? index + '/' : '';\n    var publicPath = indexPath !== '' ? indexPath + '/' : '';\n\n    // Must have the common _karma_webpack_ prefix on path here to avoid\n    // https://github.com/webpack/webpack/issues/645\n    webpackOptions.output.path = '/_karma_webpack_/' + indexPath;\n    webpackOptions.output.publicPath = '/_karma_webpack_/' + publicPath;\n    webpackOptions.output.filename = '[name]';\n    if (includeIndex) {\n      webpackOptions.output.jsonpFunction = 'webpackJsonp' + index;\n    }\n    webpackOptions.output.chunkFilename = '[id].bundle.js';\n  });\n\n  this.emitter = emitter;\n  this.wrapMocha = frameworks.indexOf('mocha') >= 0 && includeIndex;\n  this.optionsCount = applyOptions.length;\n  this.files = [];\n  this.basePath = basePath;\n  this.waiting = [];\n\n  var compiler;\n  try {\n    compiler = webpack(webpackOptions);\n  } catch (e) {\n    console.error(e.stack || e);\n    if (e.details) {\n      console.error(e.details);\n    }\n    throw e;\n  }\n\n  var applyPlugins = compiler.compilers || [compiler];\n\n  applyPlugins.forEach(function (compiler) {\n    compiler.plugin('this-compilation', function (compilation, params) {\n      compilation.dependencyFactories.set(SingleEntryDependency, params.normalModuleFactory);\n    });\n    compiler.plugin('make', this.make.bind(this));\n  }, this);\n\n  ['invalid', 'watch-run', 'run'].forEach(function (name) {\n    compiler.plugin(name, function (_, callback) {\n      isBlocked = true;\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n  });\n\n  compiler.plugin('done', function (stats) {\n    var applyStats = Array.isArray(stats.stats) ? stats.stats : [stats];\n    var assets = [];\n    var noAssets = false;\n\n    applyStats.forEach(function (stats) {\n      stats = stats.toJson();\n\n      assets.push.apply(assets, stats.assets);\n      if (stats.assets.length === 0) {\n        noAssets = true;\n      }\n    });\n\n    if (!this.waiting || this.waiting.length === 0) {\n      this.notifyKarmaAboutChanges();\n    }\n\n    if (this.waiting && !noAssets) {\n      var w = this.waiting;\n\n      this.waiting = null;\n      w.forEach(function (cb) {\n        cb();\n      });\n    }\n\n    isBlocked = false;\n    for (var i = 0; i < blocked.length; i++) {\n      blocked[i]();\n    }\n    blocked = [];\n  }.bind(this));\n  compiler.plugin('invalid', function () {\n    if (!this.waiting) {\n      this.waiting = [];\n    }\n  }.bind(this));\n\n  webpackMiddlewareOptions.publicPath = '/_karma_webpack_/';\n  var middleware = this.middleware = new webpackDevMiddleware(compiler, webpackMiddlewareOptions);\n\n  customFileHandlers.push({\n    urlRegex: /^\\/_karma_webpack_\\/.*/,\n    handler: function handler(req, res) {\n      middleware(req, res, function () {\n        res.statusCode = 404;\n        res.end('Not found');\n      });\n    }\n  });\n\n  emitter.on('exit', function (done) {\n    middleware.close();\n    done();\n  });\n}\n\nPlugin.prototype.notifyKarmaAboutChanges = function () {\n  // Force a rebuild\n  this.emitter.refreshFiles();\n};\n\nPlugin.prototype.addFile = function (entry) {\n  if (this.files.indexOf(entry) >= 0) {\n    return;\n  }\n  this.files.push(entry);\n\n  return true;\n};\n\nPlugin.prototype.make = function (compilation, callback) {\n  async.forEach(this.files.slice(), function (file, callback) {\n    var entry = file;\n\n    if (this.wrapMocha) {\n      entry = require.resolve('./mocha-env-loader') + '!' + entry;\n    }\n\n    var dep = new SingleEntryDependency(entry);\n\n    compilation.addEntry('', dep, path.relative(this.basePath, file).replace(/\\\\/g, '/'), function () {\n      // If the module fails because of an File not found error, remove the test file\n      if (dep.module && dep.module.error && dep.module.error.error && dep.module.error.error.code === 'ENOENT') {\n        this.files = this.files.filter(function (f) {\n          return file !== f;\n        });\n        this.middleware.invalidate();\n      }\n      callback();\n    }.bind(this));\n  }.bind(this), callback);\n};\n\nPlugin.prototype.readFile = function (file, callback) {\n  var middleware = this.middleware;\n  var optionsCount = this.optionsCount;\n\n  var doRead = function () {\n    if (optionsCount > 1) {\n      async.times(optionsCount, function (idx, callback) {\n        middleware.fileSystem.readFile('/_karma_webpack_/' + idx + '/' + file.replace(/\\\\/g, '/'), callback);\n      }, function (err, contents) {\n        if (err) {\n          return callback(err);\n        };\n        contents = contents.reduce(function (arr, x) {\n          if (!arr) {\n            return [x];\n          };\n          arr.push(new Buffer('\\n'), x);\n\n          return arr;\n        }, null);\n        callback(null, Buffer.concat(contents));\n      });\n    } else {\n      try {\n        var fileContents = middleware.fileSystem.readFileSync('/_karma_webpack_/' + file.replace(/\\\\/g, '/'));\n\n        callback(undefined, fileContents);\n      } catch (e) {\n        // If this is an error from `readFileSync` method, wait for the next tick.\n        // Credit #69 @mewdriller\n        if (e.code === 'ENOENT') {\n          // eslint-disable-line quotes\n          this.waiting = [process.nextTick.bind(process, this.readFile.bind(this, file, callback))];\n\n          // throw otherwise\n        } else {\n          callback(e);\n        }\n      }\n    }\n  }.bind(this);\n\n  if (!this.waiting) {\n    doRead();\n  } else {\n    // Retry to read once a build is finished\n    // do it on process.nextTick to catch changes while building\n    this.waiting.push(process.nextTick.bind(process, this.readFile.bind(this, file, callback)));\n  }\n};\n\nfunction createPreprocesor( /* config.basePath */basePath, webpackPlugin) {\n  return function (content, file, done) {\n    if (webpackPlugin.addFile(file.path)) {\n      // recompile as we have an asset that we have not seen before\n      webpackPlugin.middleware.invalidate();\n    }\n\n    // read blocks until bundle is done\n    webpackPlugin.readFile(path.relative(basePath, file.path), function (err, content) {\n      if (err) {\n        throw err;\n      }\n\n      done(err, content && content.toString());\n    });\n  };\n}\n\nfunction createWebpackBlocker() {\n  return function (request, response, next) {\n    if (isBlocked) {\n      blocked.push(next);\n    } else {\n      next();\n    }\n  };\n}\n\nmodule.exports = {\n  webpackPlugin: ['type', Plugin],\n  'preprocessor:webpack': ['factory', createPreprocesor],\n  'middleware:webpackBlocker': ['factory', createWebpackBlocker]\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","/home/travis/build/npmtest/node-npmtest-karma-webpack/node_modules/karma-webpack/lib/mocha-env-loader.js":"'use strict';\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//var path = require('path')\nvar SourceNode = require('source-map').SourceNode;\nvar loaderUtils = require('loader-utils');\n\nmodule.exports = function (content, map) {\n  this.cacheable();\n\n  var sourceNode;\n  var id = this.options.name;\n\n  if (!id) {\n    this.callback(null, content, map);\n  }\n\n  if (map) {\n    sourceNode = SourceNode.fromSourceWithMap(content, map);\n  } else {\n    var fileName = loaderUtils.getRemainingRequest(this);\n\n    sourceNode = new SourceNode(null, null, null);\n    content.split('\\n').forEach(function (line, idx) {\n      sourceNode.add(new SourceNode(idx + 1, 0, fileName, line + '\\n'));\n    });\n    sourceNode.setSourceContent(fileName, content);\n  }\n\n  var concatSrc = new SourceNode();\n\n  concatSrc.add(['describe(' + (0, _stringify2.default)(id) + ', function() {\\n', sourceNode, '\\n});']);\n\n  var result = concatSrc.toStringWithSourceMap();\n\n  this.callback(undefined, result.code, result.map.toString());\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vY2hhLWVudi1sb2FkZXIuanMiXSwibmFtZXMiOlsiU291cmNlTm9kZSIsInJlcXVpcmUiLCJsb2FkZXJVdGlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250ZW50IiwibWFwIiwiY2FjaGVhYmxlIiwic291cmNlTm9kZSIsImlkIiwib3B0aW9ucyIsIm5hbWUiLCJjYWxsYmFjayIsImZyb21Tb3VyY2VXaXRoTWFwIiwiZmlsZU5hbWUiLCJnZXRSZW1haW5pbmdSZXF1ZXN0Iiwic3BsaXQiLCJmb3JFYWNoIiwibGluZSIsImlkeCIsImFkZCIsInNldFNvdXJjZUNvbnRlbnQiLCJjb25jYXRTcmMiLCJyZXN1bHQiLCJ0b1N0cmluZ1dpdGhTb3VyY2VNYXAiLCJ1bmRlZmluZWQiLCJjb2RlIiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxJQUFJQSxhQUFhQyxRQUFRLFlBQVIsRUFBc0JELFVBQXZDO0FBQ0EsSUFBSUUsY0FBY0QsUUFBUSxjQUFSLENBQWxCOztBQUVBRSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLE9BQVQsRUFBa0JDLEdBQWxCLEVBQXVCO0FBQ3RDLE9BQUtDLFNBQUw7O0FBRUEsTUFBSUMsVUFBSjtBQUNBLE1BQUlDLEtBQUssS0FBS0MsT0FBTCxDQUFhQyxJQUF0Qjs7QUFFQSxNQUFJLENBQUNGLEVBQUwsRUFBUztBQUNQLFNBQUtHLFFBQUwsQ0FBYyxJQUFkLEVBQW9CUCxPQUFwQixFQUE2QkMsR0FBN0I7QUFDRDs7QUFFRCxNQUFJQSxHQUFKLEVBQVM7QUFDUEUsaUJBQWFSLFdBQVdhLGlCQUFYLENBQTZCUixPQUE3QixFQUFzQ0MsR0FBdEMsQ0FBYjtBQUNELEdBRkQsTUFFTztBQUNMLFFBQUlRLFdBQVdaLFlBQVlhLG1CQUFaLENBQWdDLElBQWhDLENBQWY7O0FBRUFQLGlCQUFhLElBQUlSLFVBQUosQ0FBZSxJQUFmLEVBQXFCLElBQXJCLEVBQTJCLElBQTNCLENBQWI7QUFDQUssWUFBUVcsS0FBUixDQUFjLElBQWQsRUFBb0JDLE9BQXBCLENBQTRCLFVBQVNDLElBQVQsRUFBZUMsR0FBZixFQUFvQjtBQUM5Q1gsaUJBQVdZLEdBQVgsQ0FBZSxJQUFJcEIsVUFBSixDQUFlbUIsTUFBTSxDQUFyQixFQUF3QixDQUF4QixFQUEyQkwsUUFBM0IsRUFBcUNJLE9BQU8sSUFBNUMsQ0FBZjtBQUNELEtBRkQ7QUFHQVYsZUFBV2EsZ0JBQVgsQ0FBNEJQLFFBQTVCLEVBQXNDVCxPQUF0QztBQUNEOztBQUVELE1BQUlpQixZQUFZLElBQUl0QixVQUFKLEVBQWhCOztBQUVBc0IsWUFBVUYsR0FBVixDQUFjLENBQ1osY0FBYyx5QkFBZVgsRUFBZixDQUFkLEdBQW1DLGtCQUR2QixFQUMyQ0QsVUFEM0MsRUFDdUQsT0FEdkQsQ0FBZDs7QUFJQSxNQUFJZSxTQUFTRCxVQUFVRSxxQkFBVixFQUFiOztBQUVBLE9BQUtaLFFBQUwsQ0FBY2EsU0FBZCxFQUF5QkYsT0FBT0csSUFBaEMsRUFBc0NILE9BQU9qQixHQUFQLENBQVdxQixRQUFYLEVBQXRDO0FBQ0QsQ0EvQkQiLCJmaWxlIjoibW9jaGEtZW52LWxvYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vdmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJylcbnZhciBTb3VyY2VOb2RlID0gcmVxdWlyZSgnc291cmNlLW1hcCcpLlNvdXJjZU5vZGVcbnZhciBsb2FkZXJVdGlscyA9IHJlcXVpcmUoJ2xvYWRlci11dGlscycpXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29udGVudCwgbWFwKSB7XG4gIHRoaXMuY2FjaGVhYmxlKClcblxuICB2YXIgc291cmNlTm9kZVxuICB2YXIgaWQgPSB0aGlzLm9wdGlvbnMubmFtZVxuXG4gIGlmICghaWQpIHtcbiAgICB0aGlzLmNhbGxiYWNrKG51bGwsIGNvbnRlbnQsIG1hcClcbiAgfVxuXG4gIGlmIChtYXApIHtcbiAgICBzb3VyY2VOb2RlID0gU291cmNlTm9kZS5mcm9tU291cmNlV2l0aE1hcChjb250ZW50LCBtYXApXG4gIH0gZWxzZSB7XG4gICAgdmFyIGZpbGVOYW1lID0gbG9hZGVyVXRpbHMuZ2V0UmVtYWluaW5nUmVxdWVzdCh0aGlzKVxuXG4gICAgc291cmNlTm9kZSA9IG5ldyBTb3VyY2VOb2RlKG51bGwsIG51bGwsIG51bGwpXG4gICAgY29udGVudC5zcGxpdCgnXFxuJykuZm9yRWFjaChmdW5jdGlvbihsaW5lLCBpZHgpIHtcbiAgICAgIHNvdXJjZU5vZGUuYWRkKG5ldyBTb3VyY2VOb2RlKGlkeCArIDEsIDAsIGZpbGVOYW1lLCBsaW5lICsgJ1xcbicpKVxuICAgIH0pXG4gICAgc291cmNlTm9kZS5zZXRTb3VyY2VDb250ZW50KGZpbGVOYW1lLCBjb250ZW50KVxuICB9XG5cbiAgdmFyIGNvbmNhdFNyYyA9IG5ldyBTb3VyY2VOb2RlKClcblxuICBjb25jYXRTcmMuYWRkKFtcbiAgICAnZGVzY3JpYmUoJyArIEpTT04uc3RyaW5naWZ5KGlkKSArICcsIGZ1bmN0aW9uKCkge1xcbicsIHNvdXJjZU5vZGUsICdcXG59KTsnXG4gIF0pXG5cbiAgdmFyIHJlc3VsdCA9IGNvbmNhdFNyYy50b1N0cmluZ1dpdGhTb3VyY2VNYXAoKVxuXG4gIHRoaXMuY2FsbGJhY2sodW5kZWZpbmVkLCByZXN1bHQuY29kZSwgcmVzdWx0Lm1hcC50b1N0cmluZygpKVxufVxuIl19"}